{"version":3,"file":"static/js/247.bfd7e604.chunk.js","mappings":"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","sources":["components/Cast/Cast.jsx","components/services/fetchMovies.js"],"sourcesContent":["import { getMovieCast } from 'components/services/fetchMovies';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nfunction Cast() {\n    const [cast, setCast] = useState([]);\n    const { movieId } = useParams();\n\n    //fetch\n    useEffect(() => {\n        getMovieCast(movieId).then(response => {\n            if (!response) {\n                return;\n            }\n            setCast([...response.cast]);\n        });\n    }, [movieId]);\n\n    return (\n        <>\n            <h4>Cast</h4>\n            <ul>\n                {cast.map(person => (\n                    <li key={person.id}>\n                        <img\n                            src={'https://image.tmdb.org/t/p/w200'.concat(\n                                person.profile_path\n                            )}\n                            alt={person.name}\n                        />\n                        <br />\n                        {person.name}\n                        <br />\n                        character: {person.character}\n                    </li>\n                ))}\n            </ul>\n        </>\n    );\n}\n\nexport default Cast;\n","import axios from \"axios\";\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '9bd5849fe0df7e403f981c3192631e34';\n\nconst params = {\n    api_key: API_KEY,\n    language: 'en-US',\n}\n\nconst getTrendingMovies = async () => {\n    // const options = {\n    //     method: 'GET',\n    //     url: 'https://api.themoviedb.org/3/trending/movie/day?language=en-US',\n    //     headers: {\n    //         accept: 'application/json',\n    //         Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI5YmQ1ODQ5ZmUwZGY3ZTQwM2Y5ODFjMzE5MjYzMWUzNCIsInN1YiI6IjY0OWMxZmIxOTYzODY0MDBlM2JiOTJkYiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.9sc78zQWEUmWayIyQricXEa9zOuE3w2J6KYL2093KGg'\n    //     }\n    // };\n\n\n    // const URL = 'https://api.themoviedb.org/3/trending/movie/day?api_key=9bd5849fe0df7e403f981c3192631e34'\n    const URL = `${BASE_URL}trending/movie/day`\n    // console.log('BASE_URL', BASE_URL);\n    try {\n        const response = await axios.get(URL, { params })\n        // .then(function (response) {\n        //     // console.log(response);\n        // })\n        // .catch(function (error) {\n        //     console.error(error);\n        // });\n\n        // console.log(response.data.results);\n        return response.data\n    }\n    catch (error) {\n        console.error(error);\n        return false\n    }\n\n}\n\nconst getMovieDetails = async (movieId) => {\n    const URL = `${BASE_URL}movie/${movieId}`\n    // console.log('URL:', URL);\n    try {\n        const response = await axios.get(URL, { params })\n        return response.data\n    } catch (error) {\n        console.error(error);\n        return false\n    }\n}\n\nconst getMovieByQuery = async (query) => {\n    // console.log('getMovieByQuery(query)>>', query);\n    const URL = `${BASE_URL}search/movie?&query='${query}'`\n    // console.log('URL for query:', URL);\n    try {\n        const response = await axios.get(URL, { params })\n        // console.log(response.data.results);\n        return response.data\n    } catch (error) {\n        console.error(error);\n        return false\n    }\n}\n\nconst getMovieCast = async (movieId) => {\n\n    //https://api.themoviedb.org/3/movie/{movie_id}/credits\n\n    const URL = `${BASE_URL}movie/${movieId}/credits`\n    try {\n        const response = await axios.get(URL, { params })\n        return response.data\n    } catch (error) {\n        console.error(error);\n        return false\n    }\n}\n\nconst getMovieReviews = async (movieId) => {\n\n    //https://api.themoviedb.org/3/movie/{movie_id}/reviews\n\n    const URL = `${BASE_URL}movie/${movieId}/reviews`\n    try {\n        const response = await axios.get(URL, { params })\n        // console.log(response.data);\n        return response.data\n    } catch (error) {\n        console.error(error);\n        return false\n    }\n}\n\nexport { getTrendingMovies, getMovieDetails, getMovieByQuery, getMovieCast, getMovieReviews }\n"],"names":["_useState","useState","_useState2","_slicedToArray","cast","setCast","movieId","useParams","useEffect","getMovieCast","then","response","_toConsumableArray","_jsxs","_Fragment","children","_jsx","map","person","src","concat","profile_path","alt","name","character","id","BASE_URL","params","api_key","language","getTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","URL","wrap","_context","prev","next","axios","sent","abrupt","data","t0","console","error","stop","apply","arguments","getMovieDetails","_ref2","_callee2","_context2","_x","getMovieByQuery","_ref3","_callee3","query","_context3","_x2","_ref4","_callee4","_context4","_x3","getMovieReviews","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}