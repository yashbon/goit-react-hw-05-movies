{"version":3,"file":"static/js/528.0b09f24b.chunk.js","mappings":"mNAGaA,EAAaC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,YAItBC,EAAiBH,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,UAG1BG,GAAYL,EAAAA,EAAAA,IAAOM,EAAAA,GAAPN,CAAYO,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,sC,SCWrC,EAlBmB,SAAHM,GAAoB,IAAdC,EAAMD,EAANC,OACZC,GAAWC,EAAAA,EAAAA,MACjB,OACIC,EAAAA,EAAAA,KAACb,EAAU,CAAAc,SACNJ,EAAOK,KAAI,SAAAC,GAAK,OACbH,EAAAA,EAAAA,KAACT,EAAc,CAAAU,UACXD,EAAAA,EAAAA,KAACP,EAAS,CACNW,GAAE,WAAAC,OAAaF,EAAMG,IACrBC,MAAO,CAAEC,KAAMV,GAAWG,SAEzBE,EAAMM,kBALMN,EAAMG,GAOV,KAIjC,C,sLCjBMI,EAAW,gCAGXC,EAAS,CACXC,QAHY,mCAIZC,SAAU,SAGRC,EAAiB,eAAAlB,GAAAmB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAJ,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAatB,OADML,EAAG,GAAAd,OAAMK,EAAQ,sBACvBY,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAE2BC,EAAAA,EAAAA,IAAUN,EAAK,CAAER,OAAAA,IAAS,OAAnC,OAARS,EAAQE,EAAAI,KAAAJ,EAAAK,OAAA,SASPP,EAASQ,MAAI,OAGC,OAHDN,EAAAC,KAAA,EAAAD,EAAAO,GAAAP,EAAA,SAGpBQ,QAAQC,MAAKT,EAAAO,IAAQP,EAAAK,OAAA,UACd,GAAK,yBAAAL,EAAAU,OAAA,GAAAd,EAAA,kBAGnB,kBA/BsB,OAAAtB,EAAAqC,MAAA,KAAAC,UAAA,KAiCjBC,EAAe,eAAAC,GAAArB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAoB,EAAOC,GAAO,IAAAnB,EAAAC,EAAA,OAAAJ,EAAAA,EAAAA,KAAAK,MAAA,SAAAkB,GAAA,cAAAA,EAAAhB,KAAAgB,EAAAf,MAAA,OAElC,OADML,EAAG,GAAAd,OAAMK,EAAQ,UAAAL,OAASiC,GAChCC,EAAAhB,KAAA,EAAAgB,EAAAf,KAAA,EAE2BC,EAAAA,EAAAA,IAAUN,EAAK,CAAER,OAAAA,IAAS,OAAnC,OAARS,EAAQmB,EAAAb,KAAAa,EAAAZ,OAAA,SACPP,EAASQ,MAAI,OAEC,OAFDW,EAAAhB,KAAA,EAAAgB,EAAAV,GAAAU,EAAA,SAEpBT,QAAQC,MAAKQ,EAAAV,IAAQU,EAAAZ,OAAA,UACd,GAAK,yBAAAY,EAAAP,OAAA,GAAAK,EAAA,kBAEnB,gBAVoBG,GAAA,OAAAJ,EAAAH,MAAA,KAAAC,UAAA,KAYfO,EAAe,eAAAC,GAAA3B,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAA0B,EAAOC,GAAK,IAAAzB,EAAAC,EAAA,OAAAJ,EAAAA,EAAAA,KAAAK,MAAA,SAAAwB,GAAA,cAAAA,EAAAtB,KAAAsB,EAAArB,MAAA,OAGhC,OADML,EAAG,GAAAd,OAAMK,EAAQ,yBAAAL,OAAwBuC,EAAK,KACpDC,EAAAtB,KAAA,EAAAsB,EAAArB,KAAA,EAE2BC,EAAAA,EAAAA,IAAUN,EAAK,CAAER,OAAAA,IAAS,OAAnC,OAARS,EAAQyB,EAAAnB,KAAAmB,EAAAlB,OAAA,SAEPP,EAASQ,MAAI,OAEC,OAFDiB,EAAAtB,KAAA,EAAAsB,EAAAhB,GAAAgB,EAAA,SAEpBf,QAAQC,MAAKc,EAAAhB,IAAQgB,EAAAlB,OAAA,UACd,GAAK,yBAAAkB,EAAAb,OAAA,GAAAW,EAAA,kBAEnB,gBAZoBG,GAAA,OAAAJ,EAAAT,MAAA,KAAAC,UAAA,KAcfa,EAAY,eAAAC,GAAAjC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAgC,EAAOX,GAAO,IAAAnB,EAAAC,EAAA,OAAAJ,EAAAA,EAAAA,KAAAK,MAAA,SAAA6B,GAAA,cAAAA,EAAA3B,KAAA2B,EAAA1B,MAAA,OAIQ,OAAjCL,EAAG,GAAAd,OAAMK,EAAQ,UAAAL,OAASiC,EAAO,YAAAY,EAAA3B,KAAA,EAAA2B,EAAA1B,KAAA,EAEZC,EAAAA,EAAAA,IAAUN,EAAK,CAAER,OAAAA,IAAS,OAAnC,OAARS,EAAQ8B,EAAAxB,KAAAwB,EAAAvB,OAAA,SACPP,EAASQ,MAAI,OAEC,OAFDsB,EAAA3B,KAAA,EAAA2B,EAAArB,GAAAqB,EAAA,SAEpBpB,QAAQC,MAAKmB,EAAArB,IAAQqB,EAAAvB,OAAA,UACd,GAAK,yBAAAuB,EAAAlB,OAAA,GAAAiB,EAAA,kBAEnB,gBAZiBE,GAAA,OAAAH,EAAAf,MAAA,KAAAC,UAAA,KAcZkB,EAAe,eAAAC,GAAAtC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAqC,EAAOhB,GAAO,IAAAnB,EAAAC,EAAA,OAAAJ,EAAAA,EAAAA,KAAAK,MAAA,SAAAkC,GAAA,cAAAA,EAAAhC,KAAAgC,EAAA/B,MAAA,OAIK,OAAjCL,EAAG,GAAAd,OAAMK,EAAQ,UAAAL,OAASiC,EAAO,YAAAiB,EAAAhC,KAAA,EAAAgC,EAAA/B,KAAA,EAEZC,EAAAA,EAAAA,IAAUN,EAAK,CAAER,OAAAA,IAAS,OAAnC,OAARS,EAAQmC,EAAA7B,KAAA6B,EAAA5B,OAAA,SAEPP,EAASQ,MAAI,OAEC,OAFD2B,EAAAhC,KAAA,EAAAgC,EAAA1B,GAAA0B,EAAA,SAEpBzB,QAAQC,MAAKwB,EAAA1B,IAAQ0B,EAAA5B,OAAA,UACd,GAAK,yBAAA4B,EAAAvB,OAAA,GAAAsB,EAAA,kBAEnB,gBAboBE,GAAA,OAAAH,EAAApB,MAAA,KAAAC,UAAA,I,6GCjFRuB,E,OAAarE,GAAAA,KAAWC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,sC,SCarC,EAbkB,SAAAoE,GACd,IAAQC,EAAuBD,EAAvBC,SAAUC,EAAaF,EAAbE,SAElB,OACIC,EAAAA,EAAAA,MAACJ,EAAU,CAACG,SAAUA,EAAS3D,SAAA,EAC3BD,EAAAA,EAAAA,KAAA,SAAO8D,KAAK,OAAOC,WAAW,EAAMJ,SAAUA,KAC9C3D,EAAAA,EAAAA,KAAA,UAAQ8D,KAAK,SAAQ7D,UACjBD,EAAAA,EAAAA,KAAA,QAAAC,SAAM,eAItB,E,mCCsDA,MA5DA,WACI,IAAA+D,GAAuCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA5CI,EAAYF,EAAA,GAAEG,EAAcH,EAAA,GACnCI,GAAsCL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA3CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAClCG,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAT,EAAAA,EAAAA,GAAAO,EAAA,GAAlDG,EAAYD,EAAA,GAAEE,EAAeF,EAAA,IAiBpCG,EAAAA,EAAAA,YAAU,WACN,IAAMnC,EAAQiC,EAAaG,IAAI,SAC1BpC,IAGLH,EAAAA,EAAAA,IAAgBG,GAAOqC,MAAK,SAAA7D,GACnBA,GAGLiD,GAAca,EAAAA,EAAAA,GAAK9D,EAAS+D,SAChC,GACJ,GAAG,CAACN,IAEJ,IAAM/E,GAAWC,EAAAA,EAAAA,MAGjB,OACI8D,EAAAA,EAAAA,MAAAuB,EAAAA,SAAA,CAAAnF,SAAA,EACID,EAAAA,EAAAA,KAAA,MAAAC,SAAI,YACJD,EAAAA,EAAAA,KAACqF,EAAS,CACNvF,SAAUA,EACV6D,SAjCS,SAAA2B,GACjBb,EAAea,EAAMC,OAAOC,MAChC,EAgCY5B,SA9BS,SAAA0B,GACjBA,EAAMG,iBAENX,EAAgB,CAAElC,MAAO4B,IACzBc,EAAMI,cAAcC,OACxB,IA2BSvB,EAAawB,OAAS,IACnB5F,EAAAA,EAAAA,KAAC6F,EAAAA,EAAU,CAAChG,OAAQuE,MAapC,C","sources":["components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","components/services/fetchMovies.js","components/SearchBar/SearchBar.styled.js","components/SearchBar/SearchBar.jsx","pages/Movies.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const ListMovies = styled.ul`\n\n`;\n\nexport const ListMoviesItem = styled.li`\n`;\n\nexport const LinkMovie = styled(Link)`\n    text-decoration: none;\n`","import { useLocation } from 'react-router-dom';\nimport { ListMovies, ListMoviesItem, LinkMovie } from './MoviesList.styled';\n\nconst MoviesList = ({ movies }) => {\n    const location = useLocation();\n    return (\n        <ListMovies>\n            {movies.map(movie => (\n                <ListMoviesItem key={movie.id}>\n                    <LinkMovie\n                        to={`/movies/${movie.id}`}\n                        state={{ from: location }}\n                    >\n                        {movie.original_title}\n                    </LinkMovie>\n                </ListMoviesItem>\n            ))}\n        </ListMovies>\n    );\n};\n\nexport default MoviesList;\n","import axios from \"axios\";\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '9bd5849fe0df7e403f981c3192631e34';\n\nconst params = {\n    api_key: API_KEY,\n    language: 'en-US',\n}\n\nconst getTrendingMovies = async () => {\n    // const options = {\n    //     method: 'GET',\n    //     url: 'https://api.themoviedb.org/3/trending/movie/day?language=en-US',\n    //     headers: {\n    //         accept: 'application/json',\n    //         Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI5YmQ1ODQ5ZmUwZGY3ZTQwM2Y5ODFjMzE5MjYzMWUzNCIsInN1YiI6IjY0OWMxZmIxOTYzODY0MDBlM2JiOTJkYiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.9sc78zQWEUmWayIyQricXEa9zOuE3w2J6KYL2093KGg'\n    //     }\n    // };\n\n\n    // const URL = 'https://api.themoviedb.org/3/trending/movie/day?api_key=9bd5849fe0df7e403f981c3192631e34'\n    const URL = `${BASE_URL}trending/movie/day`\n    // console.log('BASE_URL', BASE_URL);\n    try {\n        const response = await axios.get(URL, { params })\n        // .then(function (response) {\n        //     // console.log(response);\n        // })\n        // .catch(function (error) {\n        //     console.error(error);\n        // });\n\n        // console.log(response.data.results);\n        return response.data\n    }\n    catch (error) {\n        console.error(error);\n        return false\n    }\n\n}\n\nconst getMovieDetails = async (movieId) => {\n    const URL = `${BASE_URL}movie/${movieId}`\n    // console.log('URL:', URL);\n    try {\n        const response = await axios.get(URL, { params })\n        return response.data\n    } catch (error) {\n        console.error(error);\n        return false\n    }\n}\n\nconst getMovieByQuery = async (query) => {\n    // console.log('getMovieByQuery(query)>>', query);\n    const URL = `${BASE_URL}search/movie?&query='${query}'`\n    // console.log('URL for query:', URL);\n    try {\n        const response = await axios.get(URL, { params })\n        // console.log(response.data.results);\n        return response.data\n    } catch (error) {\n        console.error(error);\n        return false\n    }\n}\n\nconst getMovieCast = async (movieId) => {\n\n    //https://api.themoviedb.org/3/movie/{movie_id}/credits\n\n    const URL = `${BASE_URL}movie/${movieId}/credits`\n    try {\n        const response = await axios.get(URL, { params })\n        return response.data\n    } catch (error) {\n        console.error(error);\n        return false\n    }\n}\n\nconst getMovieReviews = async (movieId) => {\n\n    //https://api.themoviedb.org/3/movie/{movie_id}/reviews\n\n    const URL = `${BASE_URL}movie/${movieId}/reviews`\n    try {\n        const response = await axios.get(URL, { params })\n        // console.log(response.data);\n        return response.data\n    } catch (error) {\n        console.error(error);\n        return false\n    }\n}\n\nexport { getTrendingMovies, getMovieDetails, getMovieByQuery, getMovieCast, getMovieReviews }\n","import styled from 'styled-components'\n\nexport const SearchForm = styled.form`\ndisplay: flex;\ngap: 10px;\n`","import { SearchForm } from './SearchBar.styled';\n\nconst SearchBar = props => {\n    const { onChange, onSubmit } = props;\n\n    return (\n        <SearchForm onSubmit={onSubmit}>\n            <input type=\"text\" autoFocus={true} onChange={onChange} />\n            <button type=\"submit\">\n                <span>Search</span>\n            </button>\n        </SearchForm>\n    );\n};\n\nexport default SearchBar;\n","// import MoviesList from 'components/MoviesList/MoviesList';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport SearchBar from 'components/SearchBar/SearchBar';\nimport { getMovieByQuery } from 'components/services/fetchMovies';\nimport { useEffect, useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\n\nfunction Movies() {\n    const [searchMovies, setSerchMovies] = useState([]);\n    const [searchQuery, setSearchQuery] = useState('');\n    const [searchParams, setSearchParams] = useSearchParams();\n\n    // const [page, setPage] = useState(1); ?????????????????\n\n    //-----------------------------------------\n    const handleChange = event => {\n        setSearchQuery(event.target.value);\n    };\n\n    const handleSubmit = event => {\n        event.preventDefault();\n\n        setSearchParams({ query: searchQuery });\n        event.currentTarget.reset();\n    };\n    //-----------------------------------------\n\n    useEffect(() => {\n        const query = searchParams.get('query');\n        if (!query) {\n            return;\n        }\n        getMovieByQuery(query).then(response => {\n            if (!response) {\n                return;\n            }\n            setSerchMovies([...response.results]);\n        });\n    }, [searchParams]);\n\n    const location = useLocation();\n    // console.log('location', location);\n\n    return (\n        <>\n            <h1>Movies</h1>\n            <SearchBar\n                location={location}\n                onChange={handleChange}\n                onSubmit={handleSubmit}\n            />\n            {searchMovies.length > 0 && (\n                <MoviesList movies={searchMovies} />\n                // <ul>\n                //     {searchMovies.map(movie => (\n                //         <li key={movie.id}>\n                //             <Link to={`${movie.id}`} state={{ from: location }}>\n                //                 {movie.original_title}\n                //             </Link>\n                //         </li>\n                //     ))}\n                // </ul>\n            )}\n        </>\n    );\n}\n\nexport default Movies;\n"],"names":["ListMovies","styled","_templateObject","_taggedTemplateLiteral","ListMoviesItem","_templateObject2","LinkMovie","Link","_templateObject3","_ref","movies","location","useLocation","_jsx","children","map","movie","to","concat","id","state","from","original_title","BASE_URL","params","api_key","language","getTrendingMovies","_asyncToGenerator","_regeneratorRuntime","mark","_callee","URL","response","wrap","_context","prev","next","axios","sent","abrupt","data","t0","console","error","stop","apply","arguments","getMovieDetails","_ref2","_callee2","movieId","_context2","_x","getMovieByQuery","_ref3","_callee3","query","_context3","_x2","getMovieCast","_ref4","_callee4","_context4","_x3","getMovieReviews","_ref5","_callee5","_context5","_x4","SearchForm","props","onChange","onSubmit","_jsxs","type","autoFocus","_useState","useState","_useState2","_slicedToArray","searchMovies","setSerchMovies","_useState3","_useState4","searchQuery","setSearchQuery","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","useEffect","get","then","_toConsumableArray","results","_Fragment","SearchBar","event","target","value","preventDefault","currentTarget","reset","length","MoviesList"],"sourceRoot":""}